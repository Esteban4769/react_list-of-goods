{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","handleReset","this","goods","visibleGoods","sort","currentGood","nextGood","localeCompare","length","Error","getReorderedGoods","isDefaultOrder","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAzDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAEzB,OAAQV,GACN,KAAKL,EAASS,SACZO,EACGC,MAAK,SAACC,EAAaC,GAAd,OAA2BD,EAAYE,cAAcD,MAC7D,MAEF,KAAKnB,EAASW,OACZK,EACGC,MAAK,SAACC,EAAaC,GAAd,OAA2BD,EAAYG,OAASF,EAASE,UACjE,MAEF,KAAKrB,EAASM,KACZ,MAEF,QAAS,MAAM,IAAIgB,MAAM,mBAO3B,OAJIlB,GACFY,EAAaJ,UAGRI,EA8BSO,CAAkBtB,EAAiBa,KAAKX,OAChDqB,EAAiBnB,IAAaL,EAASM,MAAQF,EAErD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYtB,IAAaL,EAASS,WAEpCmB,QAASd,KAAKP,eALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYtB,IAAaL,EAASW,SAEpCiB,QAASd,KAAKJ,aALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAavB,IAEfwB,QAASd,KAAKF,QALhB,qBAUCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,YAHhB,sBAUJ,6BACE,6BACIE,EAAMc,KAAI,SAAAC,GAAI,OACd,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA7EtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2faf4795.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((currentGood, nextGood) => currentGood.localeCompare(nextGood));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods\n        .sort((currentGood, nextGood) => currentGood.length - nextGood.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default: throw new Error('Wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const isDefaultOrder = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isDefaultOrder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            { goods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}